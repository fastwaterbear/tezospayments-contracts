{ parameter
    (or (pair %create_service
           (bytes %metadata)
           (pair (pair %allowed_tokens (bool %tez) (set %assets address))
                 (pair (nat %allowed_operation_type)
                       (map %signing_keys key (pair (key %public_key) (option %name string))))))
        (pair %set_disabled bool (option nat))) ;
  storage (pair (pair (bool %disabled) (address %factory)) (nat %version)) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             IF { PUSH string "Factory implementation is disabled" ; FAILWITH } {} ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             CDR ;
             SIZE ;
             COMPARE ;
             EQ ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             CAR ;
             NOT ;
             AND ;
             IF { PUSH string "No allowed tokens" ; FAILWITH } {} ;
             DUP ;
             GET 5 ;
             PUSH nat 3 ;
             PUSH nat 3 ;
             DUP 3 ;
             OR ;
             COMPARE ;
             NEQ ;
             PUSH nat 0 ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
             DUP ;
             GET 6 ;
             ITER { CDR ;
                    CDR ;
                    IF_NONE
                      { UNIT }
                      { PUSH nat 30 ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        SIZE ;
                        COMPARE ;
                        GT ;
                        PUSH nat 3 ;
                        DIG 2 ;
                        SIZE ;
                        COMPARE ;
                        LT ;
                        OR ;
                        IF { PUSH string "Invalid signing key" ; FAILWITH } { PUSH unit Unit } } ;
                    DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 6 ;
             PAIR ;
             PUSH bool False ;
             SENDER ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             PUSH bool False ;
             PAIR ;
             DUP 3 ;
             GET 3 ;
             DIG 3 ;
             GET 5 ;
             PAIR ;
             PAIR ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             PAIR ;
             PAIR ;
             UNPPAIIR ;
             CREATE_CONTRACT
               { parameter
                   (or (or %owner_action
                          (or (or (bool %set_deleted) (address %set_owner))
                              (or (bool %set_pause)
                                  (pair %update_service_parameters
                                     (option %metadata bytes)
                                     (pair (pair %allowed_tokens (option %tez bool) (option %assets (set address)))
                                           (option %allowed_operation_type nat)))))
                          (map %update_signing_keys key (option (pair (key %public_key) (option %name string)))))
                       (pair %send_payment
                          (option %asset_value (pair (address %token_address) (nat %value)))
                          (pair (nat %operation_type)
                                (or %payload
                                   (bytes %public)
                                   (or (bytes %private) (pair %public_and_private bytes bytes)))))) ;
                 storage
                   (pair (pair (pair (nat %allowed_operation_type)
                                     (pair %allowed_tokens (bool %tez) (set %assets address)))
                               (pair (bool %deleted) (bytes %metadata)))
                         (pair (pair (address %owner) (bool %paused))
                               (pair (map %signing_keys key (pair (key %public_key) (option %name string)))
                                     (nat %version)))) ;
                 code { UNPAIR ;
                        IF_LEFT
                          { SENDER ;
                            DUP 3 ;
                            CDR ;
                            CAR ;
                            CAR ;
                            COMPARE ;
                            NEQ ;
                            IF { PUSH string "Only owner can do this" ; FAILWITH } {} ;
                            IF_LEFT
                              { IF_LEFT
                                  { IF_LEFT
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        DUP 3 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        DIG 2 ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                  { IF_LEFT
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        SWAP ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        CAR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR }
                                      { DUP ;
                                        UNPAIR 3 ;
                                        IF_NONE
                                          { UNPAIR ;
                                            IF_NONE
                                              { IF_NONE
                                                  { IF_NONE { PUSH string "Empty update" ; FAILWITH } { DROP ; UNIT } }
                                                  { DROP 2 ; UNIT } }
                                              { DROP 3 ; UNIT } }
                                          { DROP 3 ; UNIT } ;
                                        DROP ;
                                        DUP ;
                                        CAR ;
                                        IF_NONE
                                          { SWAP }
                                          { DUP 3 ;
                                            CDR ;
                                            SWAP ;
                                            DUP 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            PAIR ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        CAR ;
                                        IF_NONE
                                          {}
                                          { SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            DUP 3 ;
                                            CAR ;
                                            CDR ;
                                            DUP 4 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 3 ;
                                            UPDATE 1 ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        CDR ;
                                        IF_NONE
                                          {}
                                          { SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            DUP 3 ;
                                            CAR ;
                                            CDR ;
                                            DUP 4 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 3 ;
                                            UPDATE 2 ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                        SWAP ;
                                        GET 4 ;
                                        IF_NONE
                                          {}
                                          { PUSH nat 3 ;
                                            PUSH nat 3 ;
                                            DUP 3 ;
                                            OR ;
                                            COMPARE ;
                                            NEQ ;
                                            PUSH nat 0 ;
                                            DUP 3 ;
                                            COMPARE ;
                                            EQ ;
                                            OR ;
                                            IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
                                            SWAP ;
                                            DUP ;
                                            DUG 2 ;
                                            CDR ;
                                            DUP 3 ;
                                            CAR ;
                                            CDR ;
                                            DIG 3 ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 3 ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                        NIL operation ;
                                        PAIR } } }
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CDR ;
                                CAR ;
                                SWAP ;
                                ITER { DUP ; DUG 2 ; CDR ; DIG 2 ; CAR ; UPDATE } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CAR ;
                                PAIR ;
                                NIL operation ;
                                PAIR } }
                          { DUP ;
                            DUG 2 ;
                            GET 4 ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            DIG 2 ;
                            CAR ;
                            DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            CAR ;
                            CDR ;
                            IF { PUSH string "Service is paused" ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CDR ;
                            CAR ;
                            IF { PUSH string "Service is deleted" ; FAILWITH } {} ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            CAR ;
                            CAR ;
                            DIG 4 ;
                            PUSH nat 3 ;
                            PUSH nat 3 ;
                            DUP 3 ;
                            OR ;
                            COMPARE ;
                            NEQ ;
                            PUSH nat 0 ;
                            DUP 3 ;
                            COMPARE ;
                            EQ ;
                            OR ;
                            IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
                            DUP ;
                            DUG 2 ;
                            DUP ;
                            DUG 3 ;
                            AND ;
                            COMPARE ;
                            NEQ ;
                            PUSH nat 0 ;
                            PUSH nat 1 ;
                            DUP 4 ;
                            SUB ;
                            ABS ;
                            DIG 3 ;
                            AND ;
                            COMPARE ;
                            NEQ ;
                            OR ;
                            IF { PUSH string "Invalid operation type" ; FAILWITH } {} ;
                            IF_LEFT
                              { DROP }
                              { IF_LEFT
                                  { DROP ;
                                    PUSH string "Private payload is not supported at the moment" ;
                                    FAILWITH }
                                  { DROP ;
                                    PUSH string "Private payload is not supported at the moment" ;
                                    FAILWITH } } ;
                            SWAP ;
                            IF_NONE
                              { PUSH mutez 0 ;
                                AMOUNT ;
                                COMPARE ;
                                LE ;
                                IF { PUSH string "Invalid amount" ; FAILWITH } {} ;
                                DUP ;
                                CDR ;
                                CAR ;
                                CAR ;
                                CONTRACT unit ;
                                IF_NONE { PUSH string "Invalid address" ; FAILWITH } {} ;
                                SWAP ;
                                NIL operation ;
                                DIG 2 ;
                                AMOUNT ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                PAIR }
                              { DROP 2 ;
                                PUSH mutez 0 ;
                                AMOUNT ;
                                COMPARE ;
                                GT ;
                                IF { PUSH string "Invalid amount" ; FAILWITH } {} ;
                                PUSH string "Not implemented" ;
                                FAILWITH } } } } ;
             DUP 3 ;
             CAR ;
             CDR ;
             CONTRACT %add_service (pair (address %service) (address %owner)) ;
             IF_NONE { PUSH string "Invalid factory" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             DIG 3 ;
             SENDER ;
             SWAP ;
             PAIR ;
             TRANSFER_TOKENS ;
             DIG 2 ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             DIG 2 ;
             CONS ;
             PAIR }
           { UNPAIR ;
             SENDER ;
             DUP 4 ;
             CAR ;
             CDR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "Only factory contract can do this" ; FAILWITH } {} ;
             SWAP ;
             IF_NONE
               { DUP ;
                 IF { SWAP ; DUP ; DUG 2 ; CDR }
                    { PUSH string "Version is excess parameter" ; FAILWITH } }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 NOT ;
                 IF {} { DROP ; PUSH string "Version should be defined" ; FAILWITH } } ;
             DIG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

